// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: selector/selector.proto

package selector

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标签名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 附加的标签
	Additional []string `protobuf:"bytes,2,rep,name=additional,proto3" json:"additional,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selector_selector_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_selector_selector_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_selector_selector_proto_rawDescGZIP(), []int{0}
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetAdditional() []string {
	if x != nil {
		return x.Additional
	}
	return nil
}

type Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 使用的中间件定义路径
	Use string `protobuf:"bytes,1,opt,name=use,proto3" json:"use,omitempty"`
	// 定义如何选择这些方法
	Verbs []*Verb `protobuf:"bytes,2,rep,name=verbs,proto3" json:"verbs,omitempty"`
}

func (x *Selector) Reset() {
	*x = Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selector_selector_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Selector) ProtoMessage() {}

func (x *Selector) ProtoReflect() protoreflect.Message {
	mi := &file_selector_selector_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Selector.ProtoReflect.Descriptor instead.
func (*Selector) Descriptor() ([]byte, []int) {
	return file_selector_selector_proto_rawDescGZIP(), []int{1}
}

func (x *Selector) GetUse() string {
	if x != nil {
		return x.Use
	}
	return ""
}

func (x *Selector) GetVerbs() []*Verb {
	if x != nil {
		return x.Verbs
	}
	return nil
}

type Verb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 引用的handle id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 选择器
	Select string `protobuf:"bytes,2,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *Verb) Reset() {
	*x = Verb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selector_selector_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verb) ProtoMessage() {}

func (x *Verb) ProtoReflect() protoreflect.Message {
	mi := &file_selector_selector_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verb.ProtoReflect.Descriptor instead.
func (*Verb) Descriptor() ([]byte, []int) {
	return file_selector_selector_proto_rawDescGZIP(), []int{2}
}

func (x *Verb) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Verb) GetSelect() string {
	if x != nil {
		return x.Select
	}
	return ""
}

type Defined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 中间件名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 中间件中定义的所有handle
	Handlers []*Handle `protobuf:"bytes,2,rep,name=handlers,proto3" json:"handlers,omitempty"`
}

func (x *Defined) Reset() {
	*x = Defined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selector_selector_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Defined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Defined) ProtoMessage() {}

func (x *Defined) ProtoReflect() protoreflect.Message {
	mi := &file_selector_selector_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Defined.ProtoReflect.Descriptor instead.
func (*Defined) Descriptor() ([]byte, []int) {
	return file_selector_selector_proto_rawDescGZIP(), []int{3}
}

func (x *Defined) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Defined) GetHandlers() []*Handle {
	if x != nil {
		return x.Handlers
	}
	return nil
}

type Handle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id，不能重复
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 别名
	Alias string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	// 优先级
	Property int32 `protobuf:"varint,3,opt,name=property,proto3" json:"property,omitempty"`
	// 是否禁用
	Disable bool `protobuf:"varint,4,opt,name=disable,proto3" json:"disable,omitempty"`
	// 预先定义的选择器，可以在Verb中被覆盖
	PreSelect string `protobuf:"bytes,5,opt,name=preSelect,proto3" json:"preSelect,omitempty"`
	// 是否自动导入，只有在preSelect不为空时才有意义
	AutoImport bool `protobuf:"varint,6,opt,name=autoImport,proto3" json:"autoImport,omitempty"`
}

func (x *Handle) Reset() {
	*x = Handle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selector_selector_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handle) ProtoMessage() {}

func (x *Handle) ProtoReflect() protoreflect.Message {
	mi := &file_selector_selector_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handle.ProtoReflect.Descriptor instead.
func (*Handle) Descriptor() ([]byte, []int) {
	return file_selector_selector_proto_rawDescGZIP(), []int{4}
}

func (x *Handle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Handle) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Handle) GetProperty() int32 {
	if x != nil {
		return x.Property
	}
	return 0
}

func (x *Handle) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *Handle) GetPreSelect() string {
	if x != nil {
		return x.PreSelect
	}
	return ""
}

func (x *Handle) GetAutoImport() bool {
	if x != nil {
		return x.AutoImport
	}
	return false
}

var file_selector_selector_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*Tag)(nil),
		Field:         1101,
		Name:          "selector.tag",
		Tag:           "bytes,1101,opt,name=tag",
		Filename:      "selector/selector.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*Defined)(nil),
		Field:         1101,
		Name:          "selector.defined",
		Tag:           "bytes,1101,opt,name=defined",
		Filename:      "selector/selector.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*Selector)(nil),
		Field:         1102,
		Name:          "selector.select",
		Tag:           "bytes,1102,opt,name=select",
		Filename:      "selector/selector.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional selector.Tag tag = 1101;
	E_Tag = &file_selector_selector_proto_extTypes[0]
)

// Extension fields to descriptorpb.FileOptions.
var (
	// optional selector.Defined defined = 1101;
	E_Defined = &file_selector_selector_proto_extTypes[1]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional selector.Selector select = 1102;
	E_Select = &file_selector_selector_proto_extTypes[2]
)

var File_selector_selector_proto protoreflect.FileDescriptor

var file_selector_selector_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x22, 0x42, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x62, 0x52, 0x05, 0x76,
	0x65, 0x72, 0x62, 0x73, 0x22, 0x2e, 0x0a, 0x04, 0x56, 0x65, 0x72, 0x62, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x22, 0x4b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x73, 0x22, 0xa2, 0x01, 0x0a, 0x06, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x3a, 0x40, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xcd, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x3a, 0x4a, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xcd, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x3a, 0x4c, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1f,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xce, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x65, 0x6e, 0x67, 0x64, 0x61, 0x63, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2d, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2d, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3b,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_selector_selector_proto_rawDescOnce sync.Once
	file_selector_selector_proto_rawDescData = file_selector_selector_proto_rawDesc
)

func file_selector_selector_proto_rawDescGZIP() []byte {
	file_selector_selector_proto_rawDescOnce.Do(func() {
		file_selector_selector_proto_rawDescData = protoimpl.X.CompressGZIP(file_selector_selector_proto_rawDescData)
	})
	return file_selector_selector_proto_rawDescData
}

var file_selector_selector_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_selector_selector_proto_goTypes = []interface{}{
	(*Tag)(nil),                         // 0: selector.Tag
	(*Selector)(nil),                    // 1: selector.Selector
	(*Verb)(nil),                        // 2: selector.Verb
	(*Defined)(nil),                     // 3: selector.Defined
	(*Handle)(nil),                      // 4: selector.Handle
	(*descriptorpb.MethodOptions)(nil),  // 5: google.protobuf.MethodOptions
	(*descriptorpb.FileOptions)(nil),    // 6: google.protobuf.FileOptions
	(*descriptorpb.ServiceOptions)(nil), // 7: google.protobuf.ServiceOptions
}
var file_selector_selector_proto_depIdxs = []int32{
	2, // 0: selector.Selector.verbs:type_name -> selector.Verb
	4, // 1: selector.Defined.handlers:type_name -> selector.Handle
	5, // 2: selector.tag:extendee -> google.protobuf.MethodOptions
	6, // 3: selector.defined:extendee -> google.protobuf.FileOptions
	7, // 4: selector.select:extendee -> google.protobuf.ServiceOptions
	0, // 5: selector.tag:type_name -> selector.Tag
	3, // 6: selector.defined:type_name -> selector.Defined
	1, // 7: selector.select:type_name -> selector.Selector
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	5, // [5:8] is the sub-list for extension type_name
	2, // [2:5] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_selector_selector_proto_init() }
func file_selector_selector_proto_init() {
	if File_selector_selector_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_selector_selector_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selector_selector_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selector_selector_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selector_selector_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Defined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selector_selector_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_selector_selector_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_selector_selector_proto_goTypes,
		DependencyIndexes: file_selector_selector_proto_depIdxs,
		MessageInfos:      file_selector_selector_proto_msgTypes,
		ExtensionInfos:    file_selector_selector_proto_extTypes,
	}.Build()
	File_selector_selector_proto = out.File
	file_selector_selector_proto_rawDesc = nil
	file_selector_selector_proto_goTypes = nil
	file_selector_selector_proto_depIdxs = nil
}
